/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dialogsCasting;

import dlgcompartidos.DlgLlenarPerfil;
import BOSFactory.BOSFactory;
import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DateTimePicker;
import dialogsFase.DlgRegistrarFase;
import entidades.Agente;
import entidades.Casting;
import entidades.CastingOnline;
import entidades.CastingPresencial;
import entidades.Cliente;
import entidades.Perfil;
import interfaces.ICastingsDAO;
import interfaces.ICastingsService;
import interfaces.IClientesDAO;
import interfaces.IClientesService;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import negocio.ClientesService;
import persistencia.ClientesDAO;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class DlgRegistrarCasting extends javax.swing.JDialog {

    ZoneId defaultZoneId = ZoneId.systemDefault();
    ArrayList<Perfil> perfiles = new ArrayList<>();
    DefaultComboBoxModel listaClientes;
    DefaultComboBoxModel listaAgentes;
    ICastingsService castingsService;

    DlgLlenarPerfil dlgPerfil;
    DlgSeleccionarModalidad dlgModalidad;

    /**
     * Creates new form RegistrarCasting
     *
     * @param listaClientes Lista de clientes.
     * @param listaAgentes Lista de agentes.
     */
    public DlgRegistrarCasting(DefaultComboBoxModel listaClientes, DefaultComboBoxModel listaAgentes) {
        castingsService = BOSFactory.crearCastingsService();
        this.listaAgentes = listaAgentes;
        this.listaClientes = listaClientes;
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        dateContrato = new com.github.lgooddatepicker.components.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateTimeInicio = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel7 = new javax.swing.JLabel();
        dateTimeFin = new com.github.lgooddatepicker.components.DateTimePicker();
        btnSeleccionarModalidad = new javax.swing.JButton();
        btnLlenarPerfil = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        comboBoxAprobado = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboBoxClientes = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        comboBoxAgentes = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnComprobar = new javax.swing.JButton();
        btnRegistrarFase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Casting");

        jLabel1.setText("Codigo:");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        jLabel2.setText("Nombre:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel3.setText("Descripci√≥n:");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        jLabel4.setText("Fecha de Contrato:");

        jLabel5.setText("Costo:");

        jLabel6.setText("Fecha y Hora de Inicio:");

        jLabel7.setText("Fecha y Hora de Fin:");

        btnSeleccionarModalidad.setText("Registrar Modalidad");
        btnSeleccionarModalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarModalidadActionPerformed(evt);
            }
        });

        btnLlenarPerfil.setText("Registrar Perfil");
        btnLlenarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarPerfilActionPerformed(evt);
            }
        });

        jLabel8.setText("Aprobatorio:");

        comboBoxAprobado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aprobado", "Reprobado" }));

        jLabel9.setText("Cliente:");

        comboBoxClientes.setModel(listaClientes);

        jLabel10.setText("Agente:");

        comboBoxAgentes.setModel(listaAgentes);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnComprobar.setText("comprobar");
        btnComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobarActionPerformed(evt);
            }
        });

        btnRegistrarFase.setText("Registrar Fase");
        btnRegistrarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarFaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(6, 6, 6))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(btnComprobar)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTimeInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTimeFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxAprobado, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 33, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRegistrarFase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLlenarPerfil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSeleccionarModalidad)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(comboBoxAgentes, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnLlenarPerfil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionarModalidad))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnComprobar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRegistrarFase)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateTimeInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dateTimeFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxAprobado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBoxAgentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar)
                        .addComponent(btnGuardar))
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarModalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarModalidadActionPerformed
        dlgModalidad = new DlgSeleccionarModalidad();

    }//GEN-LAST:event_btnSeleccionarModalidadActionPerformed

    private void btnLlenarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarPerfilActionPerformed
        dlgPerfil = new DlgLlenarPerfil();
        perfiles = dlgPerfil.getPerfil();
    }//GEN-LAST:event_btnLlenarPerfilActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String codigo = txtCodigo.getText();
        String nombre = txtNombre.getText();
        String descripcion = txtDescripcion.getText();

        Date fechaContrato = toDate(null, dateContrato);

        String stringCosto = txtCosto.getText();
        float costo = Float.valueOf(stringCosto);

        Date fechaHoraInicio = toDate(dateTimeInicio, null);
        Date fechaHoraFin = toDate(dateTimeFin, null);

        if (fechaContrato.getTime() > fechaHoraInicio.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha contrato inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (fechaHoraInicio.getTime() > fechaHoraFin.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha de inicio inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (fechaHoraFin.getTime() > fechaContrato.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha de fin inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        boolean aprobado = (comboBoxAprobado.getSelectedItem().toString().equals("Aprobado"));
        Cliente cliente = (Cliente) comboBoxClientes.getSelectedItem();
        Agente agente = (Agente) comboBoxAgentes.getSelectedItem();
        CastingPresencial cp = dlgModalidad.getCastingPresencial();
        CastingOnline co = dlgModalidad.getCastingOnline();
        perfiles = dlgPerfil.getPerfil();

        if (cp != null) {
            Casting casting = new Casting(aprobado, costo, codigo, nombre, descripcion,
                    fechaContrato, fechaHoraInicio, fechaHoraFin, cp, perfiles,
                    cliente, agente);

            castingsService.registrarCasting(casting);
            JOptionPane.showMessageDialog(null, "Casting Guardado con √âxito.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);

            dispose();
        } else if (co != null) {
            Casting casting = new Casting(aprobado, costo, codigo, nombre, descripcion,
                    fechaContrato, fechaHoraInicio, fechaHoraFin, co, perfiles,
                    cliente, agente);

            castingsService.registrarCasting(casting);
            JOptionPane.showMessageDialog(null, "Casting Guardado con √âxito.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);

            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Campos vac√≠os o inv√°lidos, verifiquelos e intentelo de nuevo.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private boolean validar() {
        if (txtCodigo.getText().equals("") && txtNombre.getText().equals("")
                && txtDescripcion.getText().equals("") && txtCosto.getText().equals("")
                && dateContrato.getText().equals("") && dateTimeInicio.getDatePicker().getText().equals("")
                && dateTimeFin.getDatePicker().getText().equals("") && dateTimeInicio.getTimePicker().getText().equals("")
                && dateTimeFin.getTimePicker().getText().equals("") && comboBoxClientes.getSelectedItem() == null
                && comboBoxAgentes.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Campos vac√≠os o inv√°lidos, verifiquelos e intentelo de nuevo.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        try {
            float costo = Float.parseFloat(txtCosto.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo de Costo inv√°lido, verifiquelo e intentelo de nuevo.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }


    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        int res = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de que desea salir? Se borrar√°n los cambios", "Salir",
                JOptionPane.WARNING_MESSAGE);

        if (res == 0) {
            dispose();
        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtCodigo.getText().trim().length() == 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio)) {
            evt.consume();
        }

        if (txtNombre.getText().trim().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void btnComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobarActionPerformed
        if(dateContrato.getText().equals("") || dateTimeInicio.getDatePicker().getText().equals("")
                || dateTimeFin.getDatePicker().getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese las fechas",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(dateTimeInicio.getTimePicker().getText().equals("") || 
                dateTimeFin.getTimePicker().getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese las horas",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Date fechaContrato = toDate(null, dateContrato);
        Date fechaHoraInicio = toDate(dateTimeInicio, null);
        Date fechaHoraFin = toDate(dateTimeFin, null);
        
        
        
        if (fechaContrato.getTime() > fechaHoraInicio.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha contrato inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (fechaHoraInicio.getTime() >= fechaHoraFin.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha de inicio inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (fechaHoraFin.getTime() < fechaContrato.getTime()) {
            JOptionPane.showMessageDialog(null, "Fecha de fin inv√°lida, ingrese otra.",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        

        JOptionPane.showMessageDialog(null, "VALIDO",
                "VALIDO", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnComprobarActionPerformed

    private void btnRegistrarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarFaseActionPerformed
        new DlgRegistrarFase();
    }//GEN-LAST:event_btnRegistrarFaseActionPerformed

    private void limpiar() {
        txtCodigo.setText("");
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtCosto.setText("");
        dateContrato.setText("");
        dateTimeInicio.getDatePicker().setText("");
        dateTimeInicio.getTimePicker().setText("");
        dateTimeFin.getDatePicker().setText("");
        dateTimeFin.getTimePicker().setText("");
        comboBoxAprobado.setSelectedIndex(0);
        comboBoxClientes.setSelectedIndex(0);
        comboBoxAgentes.setSelectedIndex(0);

    }

    public Date toDate(DateTimePicker dateTimePicker, DatePicker datePicker) {

        if (dateTimePicker != null) {
            String date = dateTimePicker.getDatePicker().getDate().format(DateTimeFormatter.ofPattern("dd-MM-uuuu"));
            String hour = dateTimePicker.timePicker.getTime().toString();

            String dateS = date + " " + hour;
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy hh:mm");
            Date fecha = null;
            try {
                fecha = formatter.parse(dateS);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            return fecha;
        } else if (datePicker != null) {
            Date fecha = Date.from(datePicker.getDate().atStartOfDay(defaultZoneId).toInstant());
            return fecha;
        }
        return null;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnComprobar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLlenarPerfil;
    private javax.swing.JButton btnRegistrarFase;
    private javax.swing.JButton btnSeleccionarModalidad;
    private javax.swing.JComboBox<String> comboBoxAgentes;
    private javax.swing.JComboBox<String> comboBoxAprobado;
    private javax.swing.JComboBox<String> comboBoxClientes;
    private com.github.lgooddatepicker.components.DatePicker dateContrato;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimeFin;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimeInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
